[{"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\index.js":"1","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\App.js":"2","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reportWebVitals.js":"3","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\redux\\configureStore.js":"4","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\MainComp.js":"5","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\redux\\forms.js":"6","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\ServicelistComp.js":"7","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\WorkorderComp.js":"8","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\InvoicewoComp.js":"9","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\SettingsComp.js":"10","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\HomeComp.js":"11","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\HeaderComp.js":"12","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\CustomerComp.js":"13","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\auth.js":"14","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\customer.js":"15","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\service.js":"16","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\tech.js":"17","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\actions\\ActionCreators.js":"18","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\CustomerGrid.js":"19","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\ServiceGrid.js":"20","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\TechGrid.js":"21","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\TechloadGrid.js":"22","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WodueGrid.js":"23","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGrid.js":"24","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\actions\\ActionTypes.js":"25","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\techlist.js":"26","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\utils\\context.js":"27","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\customerlist.js":"28","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\BaseUrl.js":"29","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\servicelist.js":"30","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\ServiceBodyEdit.js":"31","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\ServiceBodyAdd.js":"32","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\ServiceBodyView.js":"33","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\CustBodyAdd.js":"34","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\CustBodyEdit.js":"35","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\CustBodyView.js":"36","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\TechBodyAdd.js":"37","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\TechBodyEdit.js":"38","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGridList.js":"39","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyAdd.js":"40","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\workorder.js":"41","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\workorderdtl.js":"42","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\worderparts.js":"43","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGridDtl.js":"44","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyAddDtl.js":"45","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoTechCheckIn.js":"46","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoTechCheckOut.js":"47","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyEdit.js":"48","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyView.js":"49","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGridDtlPrt.js":"50","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyAddDtlParts.js":"51","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyEditDtlParts.js":"52","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\settings.js":"53"},{"size":500,"mtime":499162500000,"results":"54","hashOfConfig":"55"},{"size":631,"mtime":1609200302542,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"55"},{"size":1561,"mtime":1614481561798,"results":"58","hashOfConfig":"55"},{"size":2472,"mtime":1614557075764,"results":"59","hashOfConfig":"55"},{"size":217,"mtime":1608967216573,"results":"60","hashOfConfig":"55"},{"size":1055,"mtime":1614576992114,"results":"61","hashOfConfig":"55"},{"size":366,"mtime":1609407280528,"results":"62","hashOfConfig":"55"},{"size":202,"mtime":1607408694715,"results":"63","hashOfConfig":"55"},{"size":9478,"mtime":1614581029802,"results":"64","hashOfConfig":"55"},{"size":3260,"mtime":1614580598140,"results":"65","hashOfConfig":"55"},{"size":4846,"mtime":1614580849488,"results":"66","hashOfConfig":"55"},{"size":1466,"mtime":1614578530930,"results":"67","hashOfConfig":"55"},{"size":1174,"mtime":1608454250256,"results":"68","hashOfConfig":"55"},{"size":1229,"mtime":1609139837348,"results":"69","hashOfConfig":"55"},{"size":1184,"mtime":1608625533762,"results":"70","hashOfConfig":"55"},{"size":1310,"mtime":1612868781123,"results":"71","hashOfConfig":"55"},{"size":29169,"mtime":1614482787463,"results":"72","hashOfConfig":"55"},{"size":12458,"mtime":1614578009611,"results":"73","hashOfConfig":"55"},{"size":9824,"mtime":1614577093458,"results":"74","hashOfConfig":"55"},{"size":7994,"mtime":1614577127919,"results":"75","hashOfConfig":"55"},{"size":1398,"mtime":1612869345635,"results":"76","hashOfConfig":"55"},{"size":1649,"mtime":1612951271131,"results":"77","hashOfConfig":"55"},{"size":1893,"mtime":1614578028106,"results":"78","hashOfConfig":"55"},{"size":2395,"mtime":1614475267399,"results":"79","hashOfConfig":"55"},{"size":697,"mtime":1608188467398,"results":"80","hashOfConfig":"55"},{"size":94,"mtime":1608693633564,"results":"81","hashOfConfig":"55"},{"size":1369,"mtime":1608281355237,"results":"82","hashOfConfig":"55"},{"size":53,"mtime":1608862513081,"results":"83","hashOfConfig":"55"},{"size":2263,"mtime":1608185273351,"results":"84","hashOfConfig":"55"},{"size":8022,"mtime":1614062152239,"results":"85","hashOfConfig":"55"},{"size":7700,"mtime":1609832075443,"results":"86","hashOfConfig":"55"},{"size":4278,"mtime":1614073326225,"results":"87","hashOfConfig":"55"},{"size":17175,"mtime":1614303708674,"results":"88","hashOfConfig":"55"},{"size":18573,"mtime":1609283669123,"results":"89","hashOfConfig":"55"},{"size":8384,"mtime":1609283676923,"results":"90","hashOfConfig":"55"},{"size":5800,"mtime":1609917005859,"results":"91","hashOfConfig":"55"},{"size":8186,"mtime":1609831116444,"results":"92","hashOfConfig":"55"},{"size":20500,"mtime":1614587295639,"results":"93","hashOfConfig":"55"},{"size":12223,"mtime":1614325562119,"results":"94","hashOfConfig":"55"},{"size":1500,"mtime":1612943043829,"results":"95","hashOfConfig":"55"},{"size":938,"mtime":1609382557059,"results":"96","hashOfConfig":"55"},{"size":961,"mtime":1614247632873,"results":"97","hashOfConfig":"55"},{"size":9313,"mtime":1614585456007,"results":"98","hashOfConfig":"55"},{"size":5632,"mtime":1614414058805,"results":"99","hashOfConfig":"55"},{"size":4377,"mtime":1614416139471,"results":"100","hashOfConfig":"55"},{"size":3690,"mtime":1614416423984,"results":"101","hashOfConfig":"55"},{"size":10759,"mtime":1614326957131,"results":"102","hashOfConfig":"55"},{"size":6847,"mtime":1614074059418,"results":"103","hashOfConfig":"55"},{"size":10118,"mtime":1614414768368,"results":"104","hashOfConfig":"55"},{"size":5409,"mtime":1614414413992,"results":"105","hashOfConfig":"55"},{"size":5476,"mtime":1614326980342,"results":"106","hashOfConfig":"55"},{"size":769,"mtime":1614481507822,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"u24n2q",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"224","usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"227","usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\index.js",[],["233","234"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\App.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reportWebVitals.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\redux\\configureStore.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\MainComp.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\redux\\forms.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\ServicelistComp.js",["235","236"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\WorkorderComp.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\InvoicewoComp.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\SettingsComp.js",["237","238","239","240","241","242","243","244","245","246","247","248","249"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\HomeComp.js",["250","251","252","253","254","255","256","257","258","259"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\HeaderComp.js",["260","261","262"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\components\\CustomerComp.js",["263","264"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\auth.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\customer.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\service.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\tech.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\actions\\ActionCreators.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\CustomerGrid.js",["265"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\ServiceGrid.js",["266"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\TechGrid.js",["267","268"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\TechloadGrid.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WodueGrid.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGrid.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\actions\\ActionTypes.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\techlist.js",[],["269","270"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\utils\\context.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\customerlist.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\BaseUrl.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\shared\\servicelist.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\ServiceBodyEdit.js",["271","272","273","274","275"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\nconst isNumber   = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Serviceformedit extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                serviceid: '',\r\n                servicename: '',\r\n                servicedescription: '',\r\n                price: '',\r\n\r\n                touched: {\r\n                    serviceid: false,\r\n                    servicename:  false,\r\n                    servicedescription:    false,\r\n                    price:      false,\r\n                   \r\n                }\r\n            \r\n\r\n             }\r\n    } \r\n} \r\n\r\n\r\nhandleSubmitEdit(values) {\r\n   this.props.editService(this.props.selectedRow.serviceid, \r\n                          values.servicename, \r\n                          values.servicedescription, \r\n                          values.price); \r\n     this.props.toggleModalEdit();                      \r\n}\r\n        \r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitEdit(values)}>\r\n                           \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"servicename\" md={3}>servicename</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".servicename\" id=\"servicename\" name=\"servicename\"\r\n                                                       placeholder=\"Service Name\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.servicename}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(10),\r\n                                                            maxLength: maxLength(50)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".servicename\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"price\" md={3}>price</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".price\" id=\"price\" name=\"price\"\r\n                                                       placeholder=\"price\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.price}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            isNumber,\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".price\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 10 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"servicedescription\" md={3}>Description</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model =\".servicedescription\" id=\"servicedecription\" name=\"servicedesription\"\r\n                                                       placeholder=\"Description\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.servicedescription}\r\n                                                       rows=\"6\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".servicedescription\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />        \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default Serviceformedit;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\ServiceBodyAdd.js",["276","277","278","279","280"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\nconst isNumber   = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Serviceformadd extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n               \r\n                servicename: '',\r\n                servicedescription: '',\r\n                price: '',\r\n\r\n                touched: {\r\n                    serviceid: false,\r\n                    servicename:  false,\r\n                    servicedescription:    false,\r\n                    price:      false,\r\n                   \r\n                }\r\n            \r\n\r\n             }\r\n    } \r\n} \r\n\r\n\r\nhandleSubmitAdd(values) {\r\n   this.props.addService(\r\n                          values.servicename, \r\n                          values.servicedescription, \r\n                          values.price); \r\n                          \r\n                          \r\n     this.props.toggleModalAdd();                      \r\n}\r\n        \r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                           \r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"servicename\" md={3}>servicename</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".servicename\" id=\"servicename\" name=\"servicename\"\r\n                                                       placeholder=\"Service Name\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(10),\r\n                                                            maxLength: maxLength(50)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".servicename\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"price\" md={3}>price</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".price\" id=\"price\" name=\"price\"\r\n                                                       placeholder=\"price\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            isNumber,\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".price\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 10 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"servicedescription\" md={3}>Description</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model =\".servicedescription\" id=\"servicedecription\" name=\"servicedesription\"\r\n                                                       placeholder=\"Description\"\r\n                                                       className=\"form-control\"\r\n                                                       rows=\"6\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".servicedescription\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />        \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default Serviceformadd;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\ServiceBodyView.js",["281","282","283","284","285"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label } from 'reactstrap';\r\n\r\n\r\nclass Serviceformview extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                serviceid: '',\r\n                servicename: '',\r\n                servicedescription: '',\r\n                price: '',\r\n             }\r\n    } \r\n} \r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n\r\n                <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"serviceid\" md={3}>serviceid</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".serviceid\" id=\"serviceid\" name=\"serviceid\"\r\n                                                       placeholder=\"Service Vode\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.serviceid}\r\n                                                      \r\n                                                       />\r\n                                                         \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"servicename\" md={3}>servicename</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".servicename\" id=\"servicename\" name=\"servicename\"\r\n                                                       placeholder=\"Service Name\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.servicename}\r\n                                                      \r\n                                                       />\r\n                                            \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"price\" md={3}>price</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".price\" id=\"price\" name=\"price\"\r\n                                                       placeholder=\"price\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.price}\r\n                                                      \r\n                                                       />\r\n                                            \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"servicedescription\" md={3}>Description</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model =\".servicedescription\" id=\"servicedecription\" name=\"servicedesription\"\r\n                                                       placeholder=\"Description\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.servicedescription}\r\n                                                       rows=\"6\"\r\n                                                      \r\n                                                       />\r\n                                     \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            \r\n                           \r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default Serviceformview;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\CustBodyAdd.js",["286","287","288","289","290","291","292","293","294"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\nconst isNumber   = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Custformadd extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n\r\n                \r\n                \r\n                touched: {\r\n                    firstname: false,\r\n                    lastname:  false,\r\n                    street:    false,\r\n                    city:      false,\r\n                    state:     false,\r\n                    zip:       false,\r\n                    mobile:    false,\r\n                    email:     false,\r\n                }\r\n            \r\n\r\n             }\r\n    } \r\n} \r\n\r\n\r\nhandleSubmitAdd(values) {\r\n   this.props.addCustomer(values.firstname, \r\n                          values.lastname, \r\n                          values.street, \r\n                          values.city, \r\n                          values.state, \r\n                          values.zip, \r\n                          values.mobile, \r\n                          values.email);\r\n     this.props.toggleModalAdd();                      \r\n}\r\n        \r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"firstname\"md={3}>First Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                       placeholder=\"FirstName\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                        />\r\n\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".firstname\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />  \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"lastname\" md={3}>Last Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                       placeholder=\"Last Name\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".lastname\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"street\" md={3}>Street</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".street\" id=\"street\" name=\"street\"\r\n                                                       placeholder=\"Street\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(10),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".street\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 10 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"city\" md={3}>City</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".city\" id=\"city\" name=\"city\"\r\n                                                       placeholder=\"City\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".city\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />        \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"state\" md={3}>state</Label>\r\n                                     <Col md={4}>\r\n                                         <Control.text model =\".state\" id=\"state\" name=\"state\"\r\n                                                       placeholder=\"State\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                       <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".state\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                         \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"zip\" md={3}>Zip</Label>\r\n                                     <Col md={4}>\r\n                                         <Control.text model =\".zip\" id=\"zip\" name=\"zip\"\r\n                                                       placeholder=\"Zip\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            isNumber,\r\n                                                            minLength: minLength(5),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".state\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        isNumber: 'Zip code should be numeric',\r\n                                                        minLength: 'Must be 5 digit numberic code',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />                          \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"mobile\" md={3}>Mobile</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".mobile\" id=\"mobile\" name=\"mobile\"\r\n                                                       placeholder=\"Mobile\"\r\n                                                       className=\"form-control\"\r\n                                                       default=\"CA\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(10),\r\n                                                                                                                        isNumber,\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".mobile\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        sNumber: 'Must be 10 digit number',\r\n                                                        minLength: 'Must be a min 10 numbers',\r\n                                                    }    \r\n                                                }\r\n                                         />                      \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"email\" md={3}>Email</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".email\" id=\"email\" name=\"email\"\r\n                                                       placeholder=\"Email\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            validEmail,\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".email\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        validEmail: 'Invalid email address',\r\n                                                    }\r\n                                                }\r\n                                         />                              \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default Custformadd;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\CustBodyEdit.js",["295","296","297","298","299","300","301","302","303"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\nconst isNumber   = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n\r\nclass Custform extends Component {\r\n    \r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n               \r\n                firstname: '',\r\n                lastname:  '',\r\n                street:    '',\r\n                city:     '',\r\n                state:     '',\r\n                zip:       '',\r\n                mobile:    '',\r\n                email:     '',\r\n                \r\n\r\n                touched: {\r\n                    firstname: true,\r\n                    lastname:  true,\r\n                    street:    true,\r\n                    city:      true,\r\n                    state:     true,\r\n                    zip:       true,\r\n                    mobile:    true,\r\n                    email:     true,\r\n                }  \r\n\r\n            \r\n\r\n             }\r\n    } \r\n} \r\n\r\n\r\nhandleSubmitEdit(values) {\r\n    \r\n   this.props.editCustomer(this.props.selectedRow.custid,\r\n                           values.firstname, \r\n                           values.lastname, \r\n                           values.street, \r\n                           values.city, \r\n                           values.state, \r\n                           values.zip, \r\n                           values.mobile, \r\n                           values.email);\r\n                         \r\n     this.props.toggleModalEdit();                      \r\n}\r\n\r\n\r\n    \r\n    \r\nrender() \r\n\r\n{\r\n      \r\n    return (\r\n       \r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitEdit(values)}>\r\n                           \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"firstname\"md={3}>First Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                       placeholder=\"FirstName\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.firstname}\r\n                                                    \r\n\r\n                                                      // text = {this.props.selectedRow.firstname}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                        />\r\n\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".firstname\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />  \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"lastname\" md={3}>Last Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                       placeholder=\"Last Name\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.lastname}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".lastname\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"street\" md={3}>Street</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".street\" id=\"street\" name=\"street\"\r\n                                                       placeholder=\"Street\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue={this.props.selectedRow.street}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(10),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".street\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 10 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"city\" md={3}>City</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".city\" id=\"city\" name=\"city\"\r\n                                                       placeholder=\"City\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.city}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".city\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />        \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"state\" md={3}>state</Label>\r\n                                     <Col md={4}>\r\n                                         <Control.text model =\".state\" id=\"state\" name=\"state\"\r\n                                                       placeholder=\"State\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.state}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                       <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".state\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                         \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"zip\" md={3}>Zip</Label>\r\n                                     <Col md={4}>\r\n                                         <Control.text model =\".zip\" id=\"zip\" name=\"zip\"\r\n                                                       placeholder=\"Zip\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.zip}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            isNumber,\r\n                                                            minLength: minLength(5),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".zip\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        isNumber: 'Zip code should be numeric',\r\n                                                        minLength: 'Must be 5 digit numberic code',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />                          \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"mobile\" md={3}>Mobile</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".mobile\" id=\"mobile\" name=\"mobile\"\r\n                                                       placeholder=\"Mobile\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.mobile}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(10),\r\n                                                                                                                        isNumber,\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".mobile\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        sNumber: 'Must be 10 digit number',\r\n                                                        minLength: 'Must be a min 10 numbers',\r\n                                                    }    \r\n                                                }\r\n                                         />                      \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"email\" md={3}>Email</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".email\" id=\"email\" name=\"email\"\r\n                                                       placeholder=\"Email\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.email}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            validEmail,\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".email\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        validEmail: 'Invalid email address',\r\n                                                    }\r\n                                                }\r\n                                         />                              \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                            \r\n                                        </Col>\r\n                                        \r\n\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default Custform;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\CustBodyView.js",["304","305","306","307","308","309","310","311","312"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm } from 'react-redux-form';\r\n\r\nimport { Row, Col, Label} from 'reactstrap';\r\n\r\nclass CustformView extends Component {\r\n    \r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                firstname: '',\r\n                lastname:  '',\r\n                street:    '',\r\n                city:     '',\r\n                state:     '',\r\n                zip:       '',\r\n                mobile:    '',\r\n                email:     '',\r\n\r\n\r\n                touched: {\r\n                    firstname: false,\r\n                    lastname:  false,\r\n                    street:    false,\r\n                    city:      false,\r\n                    state:     false,\r\n                    zip:       false,\r\n                    mobile:    false,\r\n                    email:     false\r\n\r\n                }\r\n\r\n             }\r\n    } \r\n} \r\n\r\n\r\nhandleSubmitView(values) {\r\n  /*   \r\n   this.props.EditCustomer(this.props.currSelectId,\r\n                           values.firstname, \r\n                           values.lastname, \r\n                           values.street, \r\n                           values.city, \r\n                           values.state, \r\n                           values.zip, \r\n                           values.mobile, \r\n                           values.email);\r\n   */                        \r\n     this.props.toggleModalEdit();                      \r\n}\r\n\r\n\r\n    \r\n    \r\nrender() \r\n\r\n{\r\n      \r\n    return (\r\n       \r\n            <div>\r\n                <LocalForm>\r\n                           \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"firstname\"md={3}>First Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                       placeholder=\"FirstName\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.firstname}\r\n                                                     \r\n                                        />\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"lastname\" md={3}>Last Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                       placeholder=\"Last Name\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.lastname}\r\n                                                       \r\n                                                       />\r\n                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"street\" md={3}>Street</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".street\" id=\"street\" name=\"street\"\r\n                                                       placeholder=\"Street\"\r\n                                                       className=\"form-control\"\r\n                                                       value={this.props.selectedRow.street}\r\n                                                      \r\n                                                       />\r\n                                         \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"city\" md={3}>City</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".city\" id=\"city\" name=\"city\"\r\n                                                       placeholder=\"City\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.city}\r\n                                                      \r\n                                                       />\r\n                                      \r\n                                           \r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"state\" md={3}>state</Label>\r\n                                     <Col md={4}>\r\n                                         <Control.text model =\".state\" id=\"state\" name=\"state\"\r\n                                                       placeholder=\"State\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.state}\r\n                                                      \r\n                                                       />\r\n                                                \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"zip\" md={3}>Zip</Label>\r\n                                     <Col md={4}>\r\n                                         <Control.text model =\".zip\" id=\"zip\" name=\"zip\"\r\n                                                       placeholder=\"Zip\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.zip}\r\n                                                       \r\n                                                       />\r\n                                                 \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"mobile\" md={3}>Mobile</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".mobile\" id=\"mobile\" name=\"mobile\"\r\n                                                       placeholder=\"Mobile\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.mobile}\r\n                                                      \r\n                                                       />\r\n                                                \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"email\" md={3}>Email</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".email\" id=\"email\" name=\"email\"\r\n                                                       placeholder=\"Email\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.email}\r\n                                                      \r\n                                                       />\r\n                                        \r\n                                                               \r\n                                     </Col>\r\n                            </Row>\r\n                            \r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default CustformView;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\TechBodyAdd.js",["313","314","315","316"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\nconst isNumber   = val => !isNaN(+val);\r\n\r\n\r\nclass Techformadd extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n               \r\n                firstname: '',\r\n                lastname: '',\r\n               \r\n\r\n                touched: {\r\n                 \r\n                    firstname:  false,\r\n                    lastname:    false,\r\n                }\r\n            \r\n\r\n             }\r\n    } \r\n} \r\n\r\n\r\nhandleSubmitAdd(values) {\r\n   this.props.addTech(values.techid, \r\n                      values.firstname, \r\n                      values.lastname); \r\n     this.props.toggleModalAdd();                      \r\n}\r\n        \r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                          \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"firstname\" md={3}>First Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".firstname\" id=\"firstnamr\" name=\"firstname\"\r\n                                                       placeholder=\"firstname\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".firstname\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"lastname\" md={3}>Last Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".lastname\" id=\"price\" name=\"lastname\"\r\n                                                       placeholder=\"Last Namr\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                     className=\"text-danger\"\r\n                                                     model=\".lastname\"\r\n                                                     show=\"touched\"\r\n                                                     component=\"div\"\r\n                                                     messages={{\r\n                                                         required: 'Required',\r\n                                                         minLength: 'Must be at least 2 characters',\r\n                                                         maxLength: 'Must be 15 characters or less'\r\n                                                     }\r\n                                                }\r\n                                         />                 \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                           \r\n                            \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default Techformadd;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\TechBodyEdit.js",["317","318","319","320","321","322"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\nconst isNumber   = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Techformedit extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                techid: '',\r\n                firstname: '',\r\n                lastname: '',\r\n               \r\n\r\n                touched: {\r\n                    techid: false,\r\n                    firstname:  false,\r\n                    lastname:    false,\r\n                }\r\n            \r\n\r\n             }\r\n    } \r\n} \r\n\r\n\r\nhandleSubmitAdd(values) {\r\n   this.props.editTech(this.props.selectedRow.techid, \r\n                      values.firstname, \r\n                      values.lastname); \r\n     this.props.toggleModalEdit();                      \r\n}\r\n        \r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"techid\"md={3}>Tech Code</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".techid\" id=\"techid\" name=\"techid\"\r\n                                                       placeholder=\"Tech Code\"\r\n                                                       className=\"form-control\"\r\n                                                       value={this.props.selectedRow.techid}\r\n                                                      /* validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(10)    \r\n                                                           }\r\n                                                       } */\r\n                                        />\r\n                                      {/*\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".techid\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 10 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />  \r\n                                            */}\r\n\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"firstname\" md={3}>First Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".firstname\" id=\"firstnamr\" name=\"firstname\"\r\n                                                       placeholder=\"firstname\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue={this.props.selectedRow.firstname}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                        <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".firstname\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }\r\n                                                }\r\n                                         />                 \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"lastname\" md={3}>Last Name</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".lastname\" id=\"price\" name=\"lastname\"\r\n                                                       placeholder=\"Last Namr\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue={this.props.selectedRow.lastname}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                            maxLength: maxLength(15)    \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                     className=\"text-danger\"\r\n                                                     model=\".lastname\"\r\n                                                     show=\"touched\"\r\n                                                     component=\"div\"\r\n                                                     messages={{\r\n                                                         required: 'Required',\r\n                                                         minLength: 'Must be at least 2 characters',\r\n                                                         maxLength: 'Must be 15 characters or less'\r\n                                                     }\r\n                                                }\r\n                                         />                 \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n    \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default Techformedit;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGridList.js",["323","324","325","326"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyAdd.js",["327","328","329","330","331","332","333","334"],"import React, { Component, useState } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\n\r\n\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\n\r\nlet currSelectId, selectedDate;\r\n\r\n\r\nlet listItems = [{}];\r\n\r\nclass WoformAdd extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                status: 'Open',\r\n                custid: '',\r\n                cust_firstname: '',\r\n                cust_lastname: '',\r\n                model: '',\r\n                brand:  '',\r\n                inst: '',\r\n                promised_date: '',\r\n                selectedDay: new Date().toISOString().slice(0,10),\r\n                isEmpty: true,\r\n                isDisabled: false,\r\n              \r\n              \r\n                \r\n                \r\n                touched: {\r\n                    status: 'Open',\r\n                    custid: '',\r\n                    cust_firstname: '',\r\n                    cust_lastname: '',\r\n                    model: '',\r\n                    brand:  '',\r\n                    inst: '',\r\n                    promised_date: '',\r\n                   \r\n                 }\r\n            \r\n\r\n         }\r\n         this.handleDayChange = this.handleDayChange.bind(this);\r\n    } \r\n    \r\n\r\n} \r\n\r\nhandleDayChange(selectedDay, modifiers, dayPickerInput) {\r\n    const input = dayPickerInput.getInput();\r\n    this.setState({\r\n      selectedDate,\r\n      isEmpty: !input.value.trim(),\r\n      isDisabled: modifiers.disabled === true,\r\n    });\r\n  }\r\n  \r\n\r\nhandleSubmitAdd(values) {\r\n\r\n if(currSelectId) {\r\n    const selCustomer =   this.props.customer.customer.filter(customer => customer.custid ===  currSelectId); \r\n\r\n    selCustomer.forEach(el =>  { \r\n         this.props.addWorkorder( currSelectId, \r\n             el.firstname,\r\n             el.lastname, \r\n             values.brand, \r\n             values.model, \r\n             this.state.selectedDay,\r\n             values.inst, \r\n             'Open'\r\n           );\r\n            \r\n     })\r\n     this.props.toggleModalAdd();    \r\n }\r\n else {\r\n      alert(\"Customer not selecected\")\r\n }\r\n \r\n   \r\n    \r\n               \r\n}\r\n\r\ncomponentDidMount() {\r\n   \r\n   \r\n\r\n   listItems =  this.props.customer.customer.map(opt =>({\r\n       label: opt.custid + '   ' + opt.cust_firstname + ' ' +  opt.cust_lastname , value: opt.custid \r\n   }))\r\n}\r\n    \r\nrender() \r\n{\r\n    const { selectedDay, isDisabled, isEmpty } = this.state;\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                           \r\n                            <Row className = \"form-group\"> \r\n                            <Label htmlFor=\"custid\"md={3}>Customer</Label>\r\n                                <Col md={8}>\r\n                                       \r\n                                        <Select \r\n                                            options={listItems}\r\n                                            onChange={opt => currSelectId = opt.value}\r\n                                            \r\n                                        />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"brand\" md={3}>Model</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".brand\" id=\"brand\" name=\"brand\"\r\n                                                       placeholder=\"Brand\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                       <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".brand\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                         \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"model\" md={3}>Model</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".model\" id=\"model\" name=\"model\"\r\n                                                       placeholder=\"Model\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".model\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />                          \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\"> \r\n                               \r\n                               <Label htmlFor=\"promised_date\" md={3}>Promise Date</Label>\r\n                                     <Col md={8}>\r\n                                     <DayPickerInput\r\n                                         value={selectedDay}\r\n                                          \r\n                                          onDayChange={this.handleDayChange}\r\n                                          dayPickerProps={{\r\n                                                          selectedDays: selectedDay,\r\n                                                          disabledDays: {\r\n                                                          daysOfWeek: [0, 6],\r\n                                                          },\r\n                                           }}\r\n                                        />\r\n\r\n                                         {/*\r\n                                         <Control.text  model =\".promised_date\" id=\"promised_date\" name=\"promised_date\"\r\n                                                       placeholder=\"YYYY-MM-DD\"\r\n                                                       className=\"form-control\"\r\n                                                   \r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                                                                                       \r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                         <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".promised_date\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                       \r\n                                                    }    \r\n                                                }\r\n                                         />  \r\n                                            */}\r\n                                                           \r\n                                     </Col>\r\n                      \r\n                            </Row>\r\n\r\n                           \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"inst\" md={3}>Description</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model = \".inst\" id= \"inst\" name=\"inst\"\r\n                                                       placeholder= \"\"\r\n                                                       className=\"form-control\"\r\n                                                       rows=\"4\"\r\n                                                       validators={\r\n                                                        {\r\n                                                         required, \r\n                                                         \r\n                                                        }\r\n                                                    }\r\n                                                    />\r\n                                   <Errors\r\n                                                 className=\"text-danger\"\r\n                                                 model=\".inst\"\r\n                                                 show=\"touched\"\r\n                                                 component=\"div\"\r\n                                                 messages={{\r\n                                                     required: 'Required',\r\n                                                     \r\n                                                 }\r\n                                             }\r\n                                      />        \r\n\r\n                                                      \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoformAdd;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\workorder.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\workorderdtl.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\worderparts.js",[],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGridDtl.js",["335"],"C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyAddDtl.js",["336","337","338","339","340","341","342","343","344"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\n\r\nlet currSelectId, selectedDate;\r\nlet listItems = [{}];\r\n\r\nclass WoformAdd extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                worderid: '',\r\n                serviceid: '',\r\n                servicename:  '',\r\n                servicedescription: '',\r\n                price: '',\r\n              \r\n                \r\n                \r\n                touched: {\r\n                    worderid:  false,\r\n                    serviceid: false,\r\n                    servicename:  false,\r\n                    servicedescription: false,\r\n                    price: false,\r\n                 }\r\n             \r\n\r\n         }\r\n\r\n                  this.setLocalState = this.setLocalState.bind(this);\r\n    } \r\n} \r\n\r\nsetLocalState(value){\r\n    const selService =   this.props.service.service.filter(svc => svc.serviceid ===  value); \r\n    selService.forEach(el =>{\r\n          this.setState({\r\n                    serviceid: el.serviceid,\r\n                    servicename: el.servicename,\r\n                    servicedescription: el.servicedescription,\r\n                    price: el.price,\r\n          })\r\n\r\n    })\r\n}\r\n\r\nhandleSubmitAdd(values) {\r\n  \r\n    this.props.addWorkorderDtl(this.props.selectedWORow.worderid,\r\n                               this.state.serviceid, \r\n                               this.state.servicename,\r\n                               this.state.servicedescription, \r\n                               this.state.price, \r\n                           );  \r\n     this.props.toggleModalAdd();    \r\n               \r\n}\r\n\r\ncomponentDidMount() {\r\n    \r\n   listItems =  this.props.service.service.map(opt =>({\r\n       label: opt.serviceid + '   ' + opt.servicename, value: opt.serviceid\r\n   }))\r\n}\r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                           \r\n                            <Row className = \"form-group\"> \r\n                            <Label htmlFor=\"serviceid\"md={3}>Service Code</Label>\r\n                                <Col md={8}>\r\n                                         {/*\r\n                                         <Control.select \r\n                                                model=\".custid\" \r\n                                                name=\"CustId\"\r\n                                                className=\"form-control\"> \r\n                                              \r\n                                        </Control.select>\r\n                                         */}\r\n\r\n                                        <Select \r\n                                            options={listItems}\r\n                                            onChange={ opt => this.setLocalState(opt.value)}\r\n                                            //onChange={opt => currSelectId = opt.value}\r\n                                            \r\n                                        />\r\n\r\n                                   \r\n                                       \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"price\" md={3}>Price</Label>\r\n                                     <Col md={8}>\r\n       \r\n                                         <Control.text  model =\".price\" id=\"price\" name=\"price\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.state.price}\r\n                                                       />\r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"servicedecription\" md={3}>Description</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model = \".servicedecription\" id= \"servicedecription\" name=\"servicedecription\"\r\n                                                       placeholder= \"\"\r\n                                                       className=\"form-control\"\r\n                                                       rows=\"4\"\r\n                                                       value = {this.state.servicedescription}\r\n                                                      \r\n                                                    />\r\n                                     </Col>\r\n                            </Row>\r\n                          \r\n                           \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoformAdd;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoTechCheckIn.js",["345","346","347"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\n\r\n\r\nlet listItems = [{}];\r\n\r\nclass WoTechCheckIn extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                worderid: this.props.selectedWORow.worderid,\r\n                techid: '',\r\n                tech_firstname:  '',\r\n                tech_lastname: '',\r\n            \r\n                touched: {\r\n                    techid: false,\r\n                    tech_comments: '',\r\n                 }\r\n         }\r\n\r\n                  this.setLocalState = this.setLocalState.bind(this);\r\n    } \r\n} \r\n\r\nsetLocalState(value){\r\n    const selTech =   this.props.tech.tech.filter(tech => tech.techid ===  value); \r\n    selTech.forEach(el =>{\r\n          this.setState({\r\n                    techid: el.techid,\r\n                    tech_firstname: el.tech_firstname,\r\n                    tech_lastname: el.tech_lastname,\r\n                   \r\n          })\r\n\r\n    })\r\n}\r\n\r\nhandleSubmitAdd(values) {\r\n    \r\n    this.props.checkInTech(this.state.worderid,\r\n                           this.state.techid, \r\n                           'Work in Progress'\r\n                           );  \r\n                          \r\n     this.props.toggleModalCheckInTech(); \r\n    \r\n}\r\n\r\ncomponentDidMount() {\r\n    \r\n   listItems =  this.props.tech.tech.map(opt =>({\r\n       label: opt.techid + '   ' + opt.tech_firstname + '' + opt.tech_lastname , value: opt.techid\r\n   }))\r\n}\r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                           \r\n                            <Row className = \"form-group\"> \r\n                            <Label htmlFor=\"techid\"md={3}>Technician</Label>\r\n                                <Col md={8}>\r\n                                       \r\n                                        <Select \r\n                                            options={listItems}\r\n                                            onChange={ opt => this.setLocalState(opt.value)}\r\n                                         \r\n                                            \r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"tech_firstname\" md={3}>First Name</Label>\r\n                                     <Col md={8}>\r\n       \r\n                                         <Control.text  model =\".tech_firstname\" id=\"tech_firstname\" name=\"tech_firstname\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.state.tech_firstname}\r\n                                                       />\r\n                                     </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"tech_lastname\" md={3}>Last Name</Label>\r\n                                     <Col md={8}>\r\n       \r\n                                         <Control.text  model =\".tech_lastname\" id=\"tech_lastname\" name=\"tech_lastname\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.state.tech_lastname}\r\n                                                       />\r\n                                     </Col>\r\n                            </Row>\r\n                           \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoTechCheckIn;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoTechCheckOut.js",["348","349","350","351"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\n\r\n\r\nlet listItems = [{}];\r\n\r\nclass WoTechCheckOut extends Component {\r\n   \r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                worderid: this.props.currworderid,\r\n                tech_comment: '',\r\n                complete: false,\r\n                status: 'Complete',\r\n                \r\n                touched: {\r\n                    tech_comment: false,\r\n                    status: false,\r\n                 }\r\n         }\r\n\r\n                  this.setLocalState = this.setLocalState.bind(this);\r\n    } \r\n} \r\n\r\nsetLocalState(value){\r\n   \r\n    this.props.workorder.forEach(el =>{\r\n          this.setState({\r\n              tech_comment: el.tech_comment\r\n          })\r\n    })\r\n}\r\n\r\nhandleSubmit(values) {\r\n   // const status = (values.complete) ? 'Complete' : 'Work in Progress';\r\n\r\n    this.props.checkOutTech(this.state.worderid,\r\n                            values.tech_comment, \r\n                            'Complete',\r\n                          );  \r\n     this.props.toggleModalCheckOutTech();    \r\n               \r\n}\r\n\r\ncomponentDidMount() {\r\n    this.setLocalState();  \r\n}\r\n\r\n\r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"tech_comment\" md={3}>Comment/Notes</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model =\".tech_comment\" id=\"tech_comment\" name=\"tech_comment\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.state.tech_comment}\r\n                                                       rows=\"6\"\r\n                                                       />\r\n                                    \r\n                                     </Col>\r\n                            </Row>\r\n                          {/*\r\n                            <Row className = \"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className = \"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox \r\n                                                model = \".complete\"\r\n                                                name=\"complete\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                               <strong>Service Work Complete?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                          */}\r\n                           \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoTechCheckOut;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyEdit.js",["352","353","354","355","356","357","358","359","360"],"import React, { Component, useState } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\n\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\n\r\nlet currSelectId, selectedDate;\r\n\r\n\r\nlet listItems = [{}];\r\n\r\nclass WoformEdit extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                status: 'Open',\r\n                custid: '',\r\n                cust_firstname: '',\r\n                cust_lastname: '',\r\n                model: '',\r\n                brand:  '',\r\n                inst: '',\r\n                promised_date: '',\r\n                currenDate:  new Date(),\r\n                selectedDay: this.props.selectedRow.promised_date.slice(0,10), /* substr(0,10) will do remove the time */\r\n                isEmpty: true,\r\n                isDisabled: false,\r\n              \r\n                \r\n                \r\n                touched: {\r\n                    status: 'Open',\r\n                    custid: '',\r\n                    cust_firstname: '',\r\n                    cust_lastname: '',\r\n                    model: '',\r\n                    brand:  '',\r\n                    inst: '',\r\n                    promised_date: '',\r\n                   \r\n                 }\r\n            \r\n\r\n         }\r\n       this.handleDayChange = this.handleDayChange.bind(this);\r\n                \r\n    } \r\n    \r\n    currSelectId  = this.props.selectedRow.custid;\r\n} \r\n\r\nhandleSubmitEdit(values) {\r\n \r\n    this.props.editWorkOrder( \r\n        this.props.selectedRow.worderid,\r\n        currSelectId, \r\n        values.brand, \r\n        values.model, \r\n        this.state.selectedDay,\r\n        values.inst \r\n      );\r\n     \r\n     this.props.toggleModalEdit();    \r\n               \r\n}\r\n\r\nhandleDayChange(selectedDay, modifiers, dayPickerInput) {\r\n    const input = dayPickerInput.getInput();\r\n    this.setState({\r\n      selectedDay,\r\n      isEmpty: !input.value.trim(),\r\n      isDisabled: modifiers.disabled === true,\r\n    });\r\n  }\r\n\r\ncomponentDidMount() {\r\n   \r\n   \r\n\r\n   listItems =  this.props.customer.customer.map(opt =>({\r\n       label: opt.custid + '   ' + opt.cust_firstname + ' ' +  opt.cust_lastname , value: opt.custid \r\n   }))\r\n}\r\n    \r\nrender() \r\n{\r\n    const { selectedDay, isDisabled, isEmpty } = this.state;\r\n    return (\r\n          \r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitEdit(values)}>\r\n                           \r\n                            <Row className = \"form-group\"> \r\n                            <Label htmlFor=\"custid\"md={3}>Customer</Label>\r\n                                <Col md={8}>\r\n                                        \r\n                                        <Select \r\n                                            options={listItems}\r\n                                            value={listItems.filter(option => option.value ===  this.props.selectedRow.custid)} \r\n                                            onChange={opt => currSelectId = opt.value}\r\n                                            \r\n                                        />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"brand\" md={3}>Model</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".brand\" id=\"brand\" name=\"brand\"\r\n                                                       placeholder=\"Brand\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.brand}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                       <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".brand\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be at least 2 characters',\r\n                                                    }\r\n                                                }\r\n                                         />                         \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"model\" md={3}>Model</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".model\" id=\"model\" name=\"model\"\r\n                                                       placeholder=\"Model\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.model}\r\n                                                       validators={\r\n                                                           {\r\n                                                            required, \r\n                                                            minLength: minLength(2),\r\n                                                           }\r\n                                                       }\r\n                                                       />\r\n                                      <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".state\"\r\n                                                    show=\"touched\"\r\n                                                    component=\"div\"\r\n                                                    messages={{\r\n                                                        minLength: 'Must be 5 digit numberic code',\r\n                                                        \r\n                                                    }\r\n                                                }\r\n                                         />                          \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\"> \r\n                               \r\n                               <Label htmlFor=\"promised_date\" md={3}>Promise Date</Label>\r\n                                     <Col md={8}>\r\n                                     <DayPickerInput\r\n                                         value={selectedDay}\r\n                                         onDayChange={this.handleDayChange}\r\n                                          dayPickerProps={{\r\n                                                          selectedDays: selectedDay,\r\n                                                          disabledDays: {\r\n                                                          daysOfWeek: [0, 6],\r\n                                                          },\r\n                                           }}\r\n                                        />\r\n                                                           \r\n                                     </Col>\r\n                      \r\n                            </Row>\r\n\r\n                           \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"inst\" md={3}>Description</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model = \".inst\" id= \"inst\" name=\"inst\"\r\n                                                       placeholder= \"\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.inst}\r\n                                                       rows=\"4\"\r\n                                                       validators={\r\n                                                        {\r\n                                                         required, \r\n                                                         \r\n                                                        }\r\n                                                    }\r\n                                                    />\r\n                                   <Errors\r\n                                                 className=\"text-danger\"\r\n                                                 model=\".servicedescription\"\r\n                                                 show=\"touched\"\r\n                                                 component=\"div\"\r\n                                                 messages={{\r\n                                                     required: 'Required',\r\n                                                     \r\n                                                 }\r\n                                             }\r\n                                      />        \r\n\r\n                                                      \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoformEdit;\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyView.js",["361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376"],"import React, { Component, useState } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport DatePicker from 'react-datepicker';\r\n\r\n\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);\r\n\r\nlet currSelectId, selectedDate;\r\n\r\n\r\nlet listItems = [{}];\r\n\r\nclass WoformView extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                status: 'Open',\r\n                custid: '',\r\n                cust_firstname: '',\r\n                cust_lastname: '',\r\n                model: '',\r\n                brand:  '',\r\n                inst: '',\r\n                promised_date: '',\r\n                currenDate:  new Date(),\r\n              \r\n                \r\n                \r\n                touched: {\r\n                    status: 'Open',\r\n                    custid: '',\r\n                    cust_firstname: '',\r\n                    cust_lastname: '',\r\n                    model: '',\r\n                    brand:  '',\r\n                    inst: '',\r\n                    promised_date: '',\r\n                   \r\n                 }\r\n            \r\n\r\n         }\r\n    } \r\n    \r\n\r\n} \r\n\r\nhandleSubmitView() {\r\n \r\n     this.props.toggleModalView();    \r\n               \r\n}\r\n\r\ncomponentDidMount() {\r\n   \r\n   \r\n\r\n   listItems =  this.props.customer.customer.map(opt =>({\r\n       label: opt.custid + '   ' + opt.cust_firstname + ' ' +  opt.cust_lastname , value: opt.custid \r\n   }))\r\n}\r\n    \r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitView(values)}>\r\n                           \r\n                            <Row className = \"form-group\"> \r\n                            <Label htmlFor=\"custid\"md={3}>Customer</Label>\r\n                                <Col md={8}>\r\n                                <Control.text model =\".custid\" id=\"custid\" name=\"custid\"\r\n                                                       placeholder=\"Custid\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.custid}\r\n                                                      \r\n                                                       />\r\n\r\n                                        \r\n\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"brand\" md={3}>Model</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".brand\" id=\"brand\" name=\"brand\"\r\n                                                       placeholder=\"Brand\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.brand}\r\n                                                      \r\n                                                       />\r\n                                             \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"model\" md={3}>Model</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.text model =\".model\" id=\"model\" name=\"model\"\r\n                                                       placeholder=\"Model\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.model}\r\n                                                       />\r\n                                               \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\"> \r\n                               \r\n                               <Label htmlFor=\"promised_date\" md={3}>Promise Date</Label>\r\n                                     <Col md={8}>\r\n                                    \r\n \r\n                                     \r\n                                    \r\n                                                                                  \r\n                                       \r\n                                         <Control.text  model =\".promised_date\" id=\"promised_date\" name=\"promised_date\"\r\n                                                       placeholder=\"YYYY-MM-DD\"\r\n                                                       className=\"form-control\"\r\n                                                       value = {this.props.selectedRow.promised_date.slice(0,10)}\r\n                                                       />\r\n                                       \r\n                                                           \r\n                                     </Col>\r\n                      \r\n                            </Row>\r\n\r\n                           \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"inst\" md={3}>Description</Label>\r\n                                     <Col md={8}>\r\n                                         <Control.textarea model = \".inst\" id= \"inst\" name=\"inst\"\r\n                                                       placeholder= \"\"\r\n                                                       className=\"form-control\"\r\n                                                       rows=\"4\"\r\n                                                       value = {this.props.selectedRow.inst}\r\n                                                     \r\n                                                    />\r\n                                   \r\n\r\n                                                      \r\n                                                       \r\n                                     </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Close\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoformView;\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\grids\\WoGridDtlPrt.js",["377","378"],"import React, { Component } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { Modal, ModalBody, ModalHeader, Row, Col, Button } from 'reactstrap';\r\nimport { LocalForm} from 'react-redux-form';\r\nimport { connect } from \"react-redux\";\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-fresh.css';\r\nimport { addWorkorderDtlParts, editWorkorderDtlParts, deleteWorkorderDtlParts, fetchWorkorderDtlParts} from '../actions/ActionCreators';\r\nimport WoformDtlAddParts  from '../forms/WoBodyAddDtlParts';\r\nimport WoformDtlEditParts from '../forms/WoBodyEditDtlParts';\r\n//import WoformView from '../forms/WoBodyView';\r\nimport * as GrIcons from 'react-icons/gr';\r\nimport * as FiIcons from 'react-icons/fi';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { startCase } from 'lodash-es';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  \r\n    return {\r\n        \r\n        workorder: state.workorder,\r\n        workoderparts: state.workoderparts\r\n      \r\n    };\r\n  };\r\n  \r\n  \r\nconst mapDispatchToProps = {\r\n    fetchWorkorderDtlParts:(worderid) => (fetchWorkorderDtlParts(worderid)),\r\n    addWorkorderDtlParts:(worderid, partsname, price)  => (addWorkorderDtlParts(worderid, partsname, price)),    \r\n    editWorkorderDtlParts:(worderid, partsid, partsname, price) => (editWorkorderDtlParts(worderid, partsid, partsname, price)),\r\n    deleteWorkorderDtlParts:(partsid, worderid) => (deleteWorkorderDtlParts(partsid, worderid)),\r\n  }\r\n\r\n  \r\n\r\nclass WogriddtlPrt extends Component {\r\n       constructor(props) {\r\n           super(props);\r\n           this.state = {\r\n               columnDefs:[\r\n                   {headerName: 'WO DTL Part#', field: 'partsid', maxWidth: 100, sortable: true, filter:true, checkboxSelection: true, hide: true},\r\n                   {headerName: 'WO ID', field: 'worderid', maxWidth: 100, sortable: true, filter:true, checkboxSelection: true },\r\n                   {headerName: 'Part Name', field: 'partsname', maxWidth: 400, sortable: true, filter:true},\r\n                   {headerName: 'Price', field: 'price', maxWidth: 300,\r\n                   valueFormatter: params => params.data.price.toFixed(2),\r\n                  \r\n                   },\r\n                  \r\n               ],\r\n               selectedRow:{\r\n                partsid: '',\r\n                worderid: '',\r\n                partsname: '',\r\n                price: '',\r\n        },\r\n               rowData: []\r\n    }\r\n\r\n           this.toggleModalAdd = this.toggleModalAdd.bind(this);\r\n           this.toggleModalDel = this.toggleModalDel.bind(this);\r\n           this.toggleModalView = this.toggleModalView.bind(this);\r\n           this.toggleModalEdit = this.toggleModalEdit.bind(this);\r\n           this.updateSelectedRow = this.updateSelectedRow.bind(this);\r\n   \r\n    }\r\n\r\n   \r\n\r\n    onRowDataChanged = (param) => {\r\n        this.gridApi = param.api\r\n        this.gridApi.forEachNode(node => node.rowIndex ? 0 : node.setSelected(true));  // select the first row \r\n      \r\n    }\r\n\r\n    toggleModalAdd() {\r\n        if (this.props.selectedWORow.status === 'Open' || \r\n        this.props.selectedWORow.status === 'Work in Progress') \r\n        {   \r\n            this.setState({\r\n                isModalOpenAdd: !this.state.isModalOpenAdd\r\n            });\r\n       }\r\n       else {\r\n             alert('Work Order not Open or Work in Progress')  \r\n       }\r\n    }\r\n\r\n   updateSelectedRow() {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData  = selectedNodes.map(node => node.data);\r\n    selectedData.forEach(node => {\r\n         this.setState({\r\n             selectedRow: Object.assign({}, this.state.selectedRow, {\r\n                  partsid: node.partsid,\r\n                  worderid: node.worderid,\r\n                  partsname: node.partsname,\r\n                  price: node.price,\r\n             }),\r\n         });  \r\n        \r\n    });\r\n\r\n   }\r\n    toggleModalEdit() {\r\n        if (this.props.selectedWORow.status === 'Open' || \r\n        this.props.selectedWORow.status === 'Work in Progress') \r\n        {   \r\n            this.setState({\r\n                isModalOpenEdit: !this.state.isModalOpenEdit,\r\n            });\r\n           this.updateSelectedRow();\r\n        }\r\n        else {\r\n            alert('Work Order not Open or Work in Progress')\r\n        } \r\n\r\n    }\r\n \r\n    toggleModalDel() {\r\n        if (this.props.selectedWORow.status === 'Open' || \r\n        this.props.selectedWORow.status === 'Work in Progress') \r\n        {   \r\n            this.updateSelectedRow();\r\n            this.setState({\r\n                isModalOpenDel: !this.state.isModalOpenDel,\r\n            \r\n            });\r\n        }\r\n        else {\r\n            alert('Work Order not Open or Work in Progress')  \r\n        }    \r\n    }\r\n    toggleModalView() {\r\n        \r\n        this.setState({\r\n            isModalOpenView: !this.state.isModalOpenView\r\n        });\r\n        this.updateSelectedRow();\r\n    }\r\n\r\n    handleSubmitDel() {\r\n\r\n         this.props.deleteWorkorderDtlParts(this.state.selectedRow.partsid,\r\n                                            this.state.selectedRow.worderid\r\n                                       );\r\n          this.props.fetchWorkorderDtlParts(this.state.selectedRow.worderid);\r\n         this.toggleModalDel();\r\n    }\r\n\r\n       render() {\r\n        return (\r\n            <React.Fragment> \r\n                    <div className = \"col-6 mt-2\">\r\n                        <h4>Parts/Materials Details</h4>\r\n                </div> \r\n                <div style={{height: 200, width: '100%'}} className=\"ag-theme-fresh\">\r\n                        \r\n                        \r\n                        <AgGridReact columnDefs={this.state.columnDefs} \r\n                                     rowData = {this.props.workoderparts.workoderparts}\r\n                                     rowSelection=\"single\"\r\n                                     //onGridReady={params => this.gridApi = params.api}\r\n                                     onGridReady={this.onGridReady}\r\n                                     onRowDataChanged={this.onRowDataChanged}\r\n                                     \r\n                        />\r\n                        </div>\r\n                        <div class = \"row mt-1\">\r\n                            <div className= \"col-6\">\r\n                                    <Button outline size=\"md\" type=\"submit\" color=\"dark\"\r\n                                             onClick={this.toggleModalAdd} >\r\n                                        <GrIcons.GrFormAdd />\r\n                                    </Button>{'  '}\r\n                                    <Button outline size=\"md\" type=\"submit\" color=\"dark\"\r\n                                            onClick={this.toggleModalEdit}>\r\n                                        <FiIcons.FiEdit3 /> \r\n                                    </Button>{'  '}\r\n                                   \r\n                                    <Button outline size=\"md\" type=\"submit\" color=\"dark\"\r\n                                               onClick={this.toggleModalDel}>\r\n                                        <RiIcons.RiDeleteBinLine />  \r\n                                    </Button>{'    '}\r\n                            </div>\r\n                                <div className = \"col\">\r\n                                <Button outline size=\"md\" type=\"submit\" color=\"dark\"\r\n                                        onClick={this.toggleModalView}>\r\n                                    <BiIcons.BiDetail /> \r\n                                    </Button>{'    '}\r\n                                </div>\r\n                        </div>\r\n                    <div>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.isModalOpenAdd} toggle={this.toggleModalAdd}>\r\n                   <ModalHeader toggle={this.toggleModalAdd}>Add Work Order Parts/Materials</ModalHeader>\r\n                    <ModalBody>\r\n                        <WoformDtlAddParts\r\n                                     addWorkorderDtlParts = {this.props.addWorkorderDtlParts}\r\n                                     toggleModalAdd ={this.toggleModalAdd} \r\n                                     selectedWORow = {this.props. selectedWORow}\r\n                                     />\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.isModalOpenEdit} toggle={this.toggleModalEdit}>\r\n                   <ModalHeader toggle={this.toggleModalEdit}>Edit Work Order Parts/Materials</ModalHeader>\r\n                    <ModalBody>\r\n                        <WoformDtlEditParts\r\n                                     editWorkorderDtlParts = {this.props.editWorkorderDtlParts}\r\n                                     toggleModalEdit ={this.toggleModalEdit}\r\n                                     selectedRow = {this.state.selectedRow}\r\n                                    />\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                \r\n                \r\n                <Modal isOpen={this.state.isModalOpenDel} toggle={this.toggleModalDel}>\r\n                <LocalForm onSubmit={values => this.handleSubmitDel()}>\r\n                   <ModalHeader toggle={this.toggleModalDel}>Delete Work Order Parts/Material Detail</ModalHeader>\r\n                    <ModalBody>\r\n                        <span>Are you want to delete work order detail  {this.state.selectedRow.partsid} ?</span>\r\n                        \r\n                        <Row className = \"form-group mt-2\">\r\n                            <Col md={{size: 5}}>\r\n                                <Button outline type=\"submit\" color=\"dark\">\r\n                                    Yes\r\n                                </Button>\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                  </LocalForm>\r\n                </Modal>  \r\n                *\r\n            </React.Fragment>\r\n\r\n        );\r\n       }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WogriddtlPrt);\r\n\r\n ","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyAddDtlParts.js",["379","380","381","382","383","384","385"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);const \r\nisNumber   = val => !isNaN(+val) && (val > 0);\r\n\r\n\r\nlet listItems = [{}];\r\n\r\nclass WoformAddParts extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                worderid: '',\r\n                partsid: '',\r\n                partsname:  '',\r\n                price: '',\r\n              \r\n                \r\n                \r\n                touched: {\r\n                    worderid:  false,\r\n                    partsid: false,\r\n                    partsname:  false,\r\n                    price: false,\r\n                 }\r\n             \r\n\r\n         }\r\n\r\n                  \r\n    } \r\n} \r\n\r\n\r\n\r\nhandleSubmitAdd(values) {\r\n\r\n  // this.props.getselectedRow(); // to  get the current selected worderid \r\n  \r\n    this.props.addWorkorderDtlParts(this.props. selectedWORow.worderid,\r\n                                    values.partsname,\r\n                                    values.price, \r\n                           );  \r\n     this.props.toggleModalAdd();    \r\n               \r\n}\r\n\r\n\r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitAdd(values)}>\r\n                           \r\n                            <Row className = \"form-group\"> \r\n                            <Label htmlFor=\"partsname\"md={5}>Part/Material Name</Label>\r\n                                <Col md={7}>\r\n                                \r\n                                <Control.text  model =\".partsname\" id=\"partsname\" name=\"partsname\"\r\n                                    className=\"form-control\"\r\n                                    validators={\r\n                                        {\r\n                                         required, \r\n                                         minLength: minLength(5),\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".partsname\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 characters',\r\n                                        }\r\n                                    }\r\n                                         />                     \r\n                               </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"price\" md={5}>Price</Label>\r\n                                     <Col md={7}>\r\n       \r\n                                         <Control.text  model =\".price\" id=\"price\" name=\"price\"\r\n                                                       className=\"form-control\"\r\n                                                       validators={\r\n                                                        {\r\n                                                         required, \r\n                                                         isNumber,\r\n                                                        }\r\n                                                    }\r\n                                                       \r\n                                                       />\r\n                                          \r\n                                        <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".price\"\r\n                                                show=\"touched\"\r\n                                                component=\"div\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    isNumber: 'Should be numberic greater than zero',\r\n                                                }\r\n                                            }\r\n                                         />                         \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            \r\n                          \r\n                           \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoformAddParts;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\forms\\WoBodyEditDtlParts.js",["386","387","388","389","390"],"import React, { Component } from 'react'\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nimport { Row, Col, Label, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\nconst required   = val => val && val.length;\r\nconst maxLength  = len => val => !val || (val.length <= len);\r\nconst minLength  = len => val => val && (val.length >= len);const \r\nisNumber   = val => !isNaN(+val) && (val > 0);\r\n\r\n\r\n\r\n\r\nclass WoformEditParts extends Component {\r\n    constructor (props) {\r\n        super(props); {\r\n            this.state = \r\n            {\r\n                worderid: '',\r\n                partsid: '',\r\n                partsname:'',\r\n                price: '',\r\n              \r\n                \r\n                \r\n                touched: {\r\n                    worderid:  false,\r\n                    partsid: false,\r\n                    partsname:  false,\r\n                    price: false,\r\n                 }\r\n         }\r\n    } \r\n} \r\n\r\n\r\n\r\nhandleSubmitEdit(values) \r\n{\r\n    this.props.editWorkorderDtlParts(this.props.selectedRow.worderid,\r\n                                    this.props.selectedRow.partsid,\r\n                                    values.partsname,\r\n                                    values.price); \r\n                             \r\n     this.props.toggleModalEdit();    \r\n}\r\n\r\n\r\nrender() \r\n{\r\n    return (\r\n            <div>\r\n                <LocalForm onSubmit={values => this.handleSubmitEdit(values)}>\r\n                           \r\n                            <Row className = \"form-group\"> \r\n                            <Label htmlFor=\"partsname\"md={3}>Part/Material Name</Label>\r\n                                <Col md={7}>\r\n                                <Control.text  model =\".partsname\" id=\"partsname\" name=\"partsname\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue = {this.props.selectedRow.partsname}\r\n                                    validators={\r\n                                        {\r\n                                         required, \r\n                                         minLength: minLength(10),\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".partsname\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 characters',\r\n                                        }\r\n                                    }\r\n                                         />                     \r\n                               </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row className = \"form-group\">                               \r\n                               <Label htmlFor=\"price\" md={3}>Price</Label>\r\n                                     <Col md={7}>\r\n       \r\n                                         <Control.text  model =\".price\" id=\"price\" name=\"price\"\r\n                                                       className=\"form-control\"\r\n                                                       defaultValue = {this.props.selectedRow.price}\r\n                                                       validators={\r\n                                                        {\r\n                                                         required, \r\n                                                         isNumber,\r\n                                                        }\r\n                                                    }\r\n                                                       \r\n                                                       />\r\n                                          \r\n                                        <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".price\"\r\n                                                show=\"touched\"\r\n                                                component=\"div\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    isNumber: 'Should be numberic greater than zero',\r\n                                                }\r\n                                            }\r\n                                         />                         \r\n                                     </Col>\r\n                            </Row>\r\n\r\n                            \r\n                          \r\n                           \r\n                            <Row className = \"form-group\">\r\n                                        <Col md={{size: 5}}>\r\n                                            <Button outline type=\"submit\" color=\"dark\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n            </div>\r\n           )\r\n    }\r\n}   \r\n\r\nexport default WoformEditParts;\r\n\r\n","C:\\Users\\Edsel\\Desktop\\WorkOrder\\Client\\src\\reducers\\settings.js",[],{"ruleId":"391","replacedBy":"392"},{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","severity":1,"message":"396","line":21,"column":23,"nodeType":"397","endLine":21,"endColumn":77},{"ruleId":"395","severity":1,"message":"396","line":24,"column":23,"nodeType":"397","endLine":24,"endColumn":71},{"ruleId":"398","severity":1,"message":"399","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":20},{"ruleId":"398","severity":1,"message":"402","line":2,"column":22,"nodeType":"400","messageId":"401","endLine":2,"endColumn":36},{"ruleId":"398","severity":1,"message":"403","line":3,"column":10,"nodeType":"400","messageId":"401","endLine":3,"endColumn":14},{"ruleId":"398","severity":1,"message":"404","line":4,"column":30,"nodeType":"400","messageId":"401","endLine":4,"endColumn":36},{"ruleId":"405","severity":1,"message":"406","line":78,"column":37,"nodeType":"397","endLine":82,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":88,"column":37,"nodeType":"397","endLine":93,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":100,"column":37,"nodeType":"397","endLine":105,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":112,"column":37,"nodeType":"397","endLine":117,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":126,"column":37,"nodeType":"397","endLine":131,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":141,"column":37,"nodeType":"397","endLine":146,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":153,"column":37,"nodeType":"397","endLine":158,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":166,"column":37,"nodeType":"397","endLine":171,"endColumn":39},{"ruleId":"395","severity":1,"message":"396","line":200,"column":26,"nodeType":"397","endLine":200,"endColumn":81},{"ruleId":"398","severity":1,"message":"407","line":6,"column":10,"nodeType":"400","messageId":"401","endLine":6,"endColumn":14},{"ruleId":"398","severity":1,"message":"408","line":6,"column":16,"nodeType":"400","messageId":"401","endLine":6,"endColumn":23},{"ruleId":"398","severity":1,"message":"409","line":6,"column":25,"nodeType":"400","messageId":"401","endLine":6,"endColumn":39},{"ruleId":"398","severity":1,"message":"410","line":6,"column":41,"nodeType":"400","messageId":"401","endLine":6,"endColumn":50},{"ruleId":"398","severity":1,"message":"411","line":12,"column":5,"nodeType":"400","messageId":"401","endLine":12,"endColumn":7},{"ruleId":"398","severity":1,"message":"412","line":13,"column":5,"nodeType":"400","messageId":"401","endLine":13,"endColumn":7},{"ruleId":"398","severity":1,"message":"413","line":14,"column":5,"nodeType":"400","messageId":"401","endLine":14,"endColumn":9},{"ruleId":"398","severity":1,"message":"414","line":15,"column":7,"nodeType":"400","messageId":"401","endLine":15,"endColumn":12},{"ruleId":"415","severity":1,"message":"416","line":43,"column":22,"nodeType":"417","messageId":"418","endLine":48,"endColumn":9},{"ruleId":"395","severity":1,"message":"396","line":91,"column":30,"nodeType":"397","endLine":91,"endColumn":84},{"ruleId":"398","severity":1,"message":"419","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":13},{"ruleId":"398","severity":1,"message":"420","line":5,"column":15,"nodeType":"400","messageId":"401","endLine":5,"endColumn":18},{"ruleId":"398","severity":1,"message":"421","line":42,"column":16,"nodeType":"400","messageId":"401","endLine":42,"endColumn":21},{"ruleId":"398","severity":1,"message":"422","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":19},{"ruleId":"395","severity":1,"message":"396","line":45,"column":16,"nodeType":"397","endLine":45,"endColumn":72},{"ruleId":"398","severity":1,"message":"423","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":23},{"ruleId":"398","severity":1,"message":"424","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":22},{"ruleId":"398","severity":1,"message":"425","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":19},{"ruleId":"398","severity":1,"message":"426","line":19,"column":13,"nodeType":"400","messageId":"401","endLine":19,"endColumn":20},{"ruleId":"391","replacedBy":"427"},{"ruleId":"393","replacedBy":"428"},{"ruleId":"398","severity":1,"message":"429","line":10,"column":7,"nodeType":"400","messageId":"401","endLine":10,"endColumn":17},{"ruleId":"415","severity":1,"message":"416","line":15,"column":23,"nodeType":"417","messageId":"418","endLine":33,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":55,"column":42,"nodeType":"397","endLine":66,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":85,"column":42,"nodeType":"397","endLine":95,"endColumn":58},{"ruleId":"405","severity":1,"message":"430","line":114,"column":42,"nodeType":"397","endLine":125,"endColumn":58},{"ruleId":"398","severity":1,"message":"429","line":10,"column":7,"nodeType":"400","messageId":"401","endLine":10,"endColumn":17},{"ruleId":"415","severity":1,"message":"416","line":15,"column":23,"nodeType":"417","messageId":"418","endLine":33,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":58,"column":42,"nodeType":"397","endLine":68,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":87,"column":42,"nodeType":"397","endLine":96,"endColumn":58},{"ruleId":"405","severity":1,"message":"430","line":115,"column":42,"nodeType":"397","endLine":125,"endColumn":58},{"ruleId":"415","severity":1,"message":"416","line":9,"column":23,"nodeType":"417","messageId":"418","endLine":17,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":29,"column":42,"nodeType":"397","endLine":34,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":42,"column":42,"nodeType":"397","endLine":47,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":55,"column":42,"nodeType":"397","endLine":60,"endColumn":58},{"ruleId":"405","severity":1,"message":"430","line":69,"column":42,"nodeType":"397","endLine":75,"endColumn":58},{"ruleId":"415","severity":1,"message":"416","line":15,"column":23,"nodeType":"417","messageId":"418","endLine":34,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":59,"column":42,"nodeType":"397","endLine":69,"endColumn":43},{"ruleId":"405","severity":1,"message":"406","line":90,"column":42,"nodeType":"397","endLine":100,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":119,"column":42,"nodeType":"397","endLine":128,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":147,"column":42,"nodeType":"397","endLine":156,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":175,"column":42,"nodeType":"397","endLine":184,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":202,"column":42,"nodeType":"397","endLine":212,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":231,"column":42,"nodeType":"397","endLine":242,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":260,"column":42,"nodeType":"397","endLine":269,"endColumn":58},{"ruleId":"415","severity":1,"message":"416","line":17,"column":23,"nodeType":"417","messageId":"418","endLine":45,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":79,"column":42,"nodeType":"397","endLine":93,"endColumn":43},{"ruleId":"405","severity":1,"message":"406","line":114,"column":42,"nodeType":"397","endLine":125,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":144,"column":42,"nodeType":"397","endLine":154,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":173,"column":42,"nodeType":"397","endLine":183,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":202,"column":42,"nodeType":"397","endLine":212,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":230,"column":42,"nodeType":"397","endLine":241,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":260,"column":42,"nodeType":"397","endLine":271,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":289,"column":42,"nodeType":"397","endLine":299,"endColumn":58},{"ruleId":"415","severity":1,"message":"416","line":9,"column":23,"nodeType":"417","messageId":"418","endLine":35,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":69,"column":42,"nodeType":"397","endLine":74,"endColumn":43},{"ruleId":"405","severity":1,"message":"406","line":81,"column":42,"nodeType":"397","endLine":86,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":94,"column":42,"nodeType":"397","endLine":99,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":108,"column":42,"nodeType":"397","endLine":113,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":123,"column":42,"nodeType":"397","endLine":128,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":136,"column":42,"nodeType":"397","endLine":141,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":148,"column":42,"nodeType":"397","endLine":153,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":160,"column":42,"nodeType":"397","endLine":165,"endColumn":58},{"ruleId":"398","severity":1,"message":"431","line":9,"column":7,"nodeType":"400","messageId":"401","endLine":9,"endColumn":15},{"ruleId":"415","severity":1,"message":"416","line":14,"column":23,"nodeType":"417","messageId":"418","endLine":30,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":51,"column":42,"nodeType":"397","endLine":61,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":80,"column":42,"nodeType":"397","endLine":90,"endColumn":58},{"ruleId":"398","severity":1,"message":"431","line":9,"column":7,"nodeType":"400","messageId":"401","endLine":9,"endColumn":15},{"ruleId":"398","severity":1,"message":"429","line":10,"column":7,"nodeType":"400","messageId":"401","endLine":10,"endColumn":17},{"ruleId":"415","severity":1,"message":"416","line":15,"column":23,"nodeType":"417","messageId":"418","endLine":31,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":51,"column":42,"nodeType":"397","endLine":62,"endColumn":43},{"ruleId":"405","severity":1,"message":"406","line":84,"column":42,"nodeType":"397","endLine":95,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":114,"column":42,"nodeType":"397","endLine":125,"endColumn":58},{"ruleId":"398","severity":1,"message":"432","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":15},{"ruleId":"398","severity":1,"message":"433","line":11,"column":56,"nodeType":"400","messageId":"401","endLine":11,"endColumn":70},{"ruleId":"398","severity":1,"message":"434","line":24,"column":10,"nodeType":"400","messageId":"401","endLine":24,"endColumn":13},{"ruleId":"398","severity":1,"message":"421","line":280,"column":15,"nodeType":"400","messageId":"401","endLine":280,"endColumn":20},{"ruleId":"398","severity":1,"message":"435","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"436","line":13,"column":7,"nodeType":"400","messageId":"401","endLine":13,"endColumn":16},{"ruleId":"415","severity":1,"message":"416","line":23,"column":23,"nodeType":"417","messageId":"418","endLine":56,"endColumn":6},{"ruleId":"398","severity":1,"message":"437","line":110,"column":26,"nodeType":"400","messageId":"401","endLine":110,"endColumn":36},{"ruleId":"398","severity":1,"message":"438","line":110,"column":38,"nodeType":"400","messageId":"401","endLine":110,"endColumn":45},{"ruleId":"405","severity":1,"message":"406","line":131,"column":42,"nodeType":"397","endLine":140,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":158,"column":42,"nodeType":"397","endLine":167,"endColumn":58},{"ruleId":"405","severity":1,"message":"430","line":232,"column":42,"nodeType":"397","endLine":242,"endColumn":55},{"ruleId":"398","severity":1,"message":"439","line":13,"column":13,"nodeType":"400","messageId":"401","endLine":13,"endColumn":20},{"ruleId":"398","severity":1,"message":"404","line":2,"column":30,"nodeType":"400","messageId":"401","endLine":2,"endColumn":36},{"ruleId":"398","severity":1,"message":"440","line":9,"column":7,"nodeType":"400","messageId":"401","endLine":9,"endColumn":15},{"ruleId":"398","severity":1,"message":"436","line":10,"column":7,"nodeType":"400","messageId":"401","endLine":10,"endColumn":16},{"ruleId":"398","severity":1,"message":"441","line":11,"column":7,"nodeType":"400","messageId":"401","endLine":11,"endColumn":16},{"ruleId":"398","severity":1,"message":"442","line":13,"column":5,"nodeType":"400","messageId":"401","endLine":13,"endColumn":17},{"ruleId":"398","severity":1,"message":"443","line":13,"column":19,"nodeType":"400","messageId":"401","endLine":13,"endColumn":31},{"ruleId":"415","severity":1,"message":"416","line":18,"column":23,"nodeType":"417","messageId":"418","endLine":41,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":111,"column":42,"nodeType":"397","endLine":114,"endColumn":58},{"ruleId":"405","severity":1,"message":"430","line":121,"column":42,"nodeType":"397","endLine":127,"endColumn":55},{"ruleId":"415","severity":1,"message":"416","line":12,"column":23,"nodeType":"417","messageId":"418","endLine":27,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":85,"column":42,"nodeType":"397","endLine":88,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":96,"column":42,"nodeType":"397","endLine":99,"endColumn":58},{"ruleId":"398","severity":1,"message":"444","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":14},{"ruleId":"398","severity":1,"message":"445","line":8,"column":5,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"415","severity":1,"message":"416","line":13,"column":23,"nodeType":"417","messageId":"418","endLine":28,"endColumn":6},{"ruleId":"405","severity":1,"message":"430","line":65,"column":42,"nodeType":"397","endLine":69,"endColumn":58},{"ruleId":"398","severity":1,"message":"435","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"436","line":12,"column":7,"nodeType":"400","messageId":"401","endLine":12,"endColumn":16},{"ruleId":"398","severity":1,"message":"443","line":15,"column":19,"nodeType":"400","messageId":"401","endLine":15,"endColumn":31},{"ruleId":"415","severity":1,"message":"416","line":22,"column":23,"nodeType":"417","messageId":"418","endLine":56,"endColumn":6},{"ruleId":"398","severity":1,"message":"437","line":96,"column":26,"nodeType":"400","messageId":"401","endLine":96,"endColumn":36},{"ruleId":"398","severity":1,"message":"438","line":96,"column":38,"nodeType":"400","messageId":"401","endLine":96,"endColumn":45},{"ruleId":"405","severity":1,"message":"406","line":119,"column":42,"nodeType":"397","endLine":129,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":147,"column":42,"nodeType":"397","endLine":157,"endColumn":58},{"ruleId":"405","severity":1,"message":"430","line":195,"column":42,"nodeType":"397","endLine":206,"endColumn":55},{"ruleId":"398","severity":1,"message":"435","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"404","line":2,"column":30,"nodeType":"400","messageId":"401","endLine":2,"endColumn":36},{"ruleId":"398","severity":1,"message":"444","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":14},{"ruleId":"398","severity":1,"message":"446","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":18},{"ruleId":"398","severity":1,"message":"440","line":10,"column":7,"nodeType":"400","messageId":"401","endLine":10,"endColumn":15},{"ruleId":"398","severity":1,"message":"436","line":11,"column":7,"nodeType":"400","messageId":"401","endLine":11,"endColumn":16},{"ruleId":"398","severity":1,"message":"441","line":12,"column":7,"nodeType":"400","messageId":"401","endLine":12,"endColumn":16},{"ruleId":"398","severity":1,"message":"442","line":14,"column":5,"nodeType":"400","messageId":"401","endLine":14,"endColumn":17},{"ruleId":"398","severity":1,"message":"443","line":14,"column":19,"nodeType":"400","messageId":"401","endLine":14,"endColumn":31},{"ruleId":"415","severity":1,"message":"416","line":21,"column":23,"nodeType":"417","messageId":"418","endLine":50,"endColumn":6},{"ruleId":"398","severity":1,"message":"445","line":65,"column":4,"nodeType":"400","messageId":"401","endLine":65,"endColumn":13},{"ruleId":"405","severity":1,"message":"406","line":79,"column":33,"nodeType":"397","endLine":84,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":95,"column":42,"nodeType":"397","endLine":100,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":108,"column":42,"nodeType":"397","endLine":112,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":127,"column":42,"nodeType":"397","endLine":131,"endColumn":58},{"ruleId":"405","severity":1,"message":"430","line":142,"column":42,"nodeType":"397","endLine":148,"endColumn":55},{"ruleId":"398","severity":1,"message":"447","line":16,"column":10,"nodeType":"400","messageId":"401","endLine":16,"endColumn":19},{"ruleId":"448","severity":1,"message":"449","line":203,"column":55,"nodeType":"450","messageId":"451","endLine":203,"endColumn":80,"fix":"452"},{"ruleId":"398","severity":1,"message":"444","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":14},{"ruleId":"398","severity":1,"message":"436","line":10,"column":7,"nodeType":"400","messageId":"401","endLine":10,"endColumn":16},{"ruleId":"398","severity":1,"message":"445","line":15,"column":5,"nodeType":"400","messageId":"401","endLine":15,"endColumn":14},{"ruleId":"415","severity":1,"message":"416","line":19,"column":23,"nodeType":"417","messageId":"418","endLine":40,"endColumn":6},{"ruleId":"448","severity":1,"message":"449","line":49,"column":37,"nodeType":"450","messageId":"451","endLine":49,"endColumn":62,"fix":"453"},{"ruleId":"405","severity":1,"message":"406","line":68,"column":33,"nodeType":"397","endLine":76,"endColumn":35},{"ruleId":"405","severity":1,"message":"406","line":96,"column":42,"nodeType":"397","endLine":105,"endColumn":58},{"ruleId":"398","severity":1,"message":"444","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":14},{"ruleId":"398","severity":1,"message":"436","line":10,"column":7,"nodeType":"400","messageId":"401","endLine":10,"endColumn":16},{"ruleId":"415","severity":1,"message":"416","line":19,"column":23,"nodeType":"417","messageId":"418","endLine":36,"endColumn":6},{"ruleId":"405","severity":1,"message":"406","line":61,"column":33,"nodeType":"397","endLine":70,"endColumn":35},{"ruleId":"405","severity":1,"message":"406","line":90,"column":42,"nodeType":"397","endLine":100,"endColumn":58},"no-native-reassign",["454"],"no-negated-in-lhs",["455"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'BreadcrumbItem' is defined but never used.","'Link' is defined but never used.","'Errors' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","'Card' is defined but never used.","'CardImg' is defined but never used.","'CardImgOverlay' is defined but never used.","'CardTitle' is defined but never used.","'dd' is assigned a value but never used.","'mm' is assigned a value but never used.","'yyyy' is assigned a value but never used.","'ctime' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Col' is defined but never used.","'Row' is defined but never used.","'email' is assigned a value but never used.","'CustomerImg' is defined but never used.","'fetchCustomer' is defined but never used.","'fetchService' is defined but never used.","'fetchTech' is defined but never used.","'BiIcons' is defined but never used.",["454"],["455"],"'validEmail' is assigned a value but never used.","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'isNumber' is assigned a value but never used.","'Alert' is defined but never used.","'fetchWorkorder' is defined but never used.","'now' is defined but never used.","'useState' is defined but never used.","'maxLength' is assigned a value but never used.","'isDisabled' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","'FiIcons' is defined but never used.","'required' is assigned a value but never used.","'minLength' is assigned a value but never used.","'currSelectId' is defined but never used.","'selectedDate' is defined but never used.","'Select' is defined but never used.","'listItems' is assigned a value but never used.","'DatePicker' is defined but never used.","'startCase' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property selectedWORow.","MemberExpression","unexpectedWhitespace",{"range":"456","text":"457"},{"range":"458","text":"457"},"no-global-assign","no-unsafe-negation",[8254,8256],".",[1192,1194]]